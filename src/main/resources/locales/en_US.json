{
	"label": "Table_Uts",
	"description": "Provides actions for Table_Uts operations.",

	"Calculate.node_label":"Calculate {{i_colunasCalc}} on {{i_tabela}} by condition",
	"Calculate.description":"",
	"Calculate.return_description":"DataTable with the new column",
	"Calculate.table.label": "Table",
	"Calculate.table.description": "",
	"Calculate.cols.label": "Input Columns:",
	"Calculate.cols.description": "Colunas a serem inseridas na condição Ex:'COl1|COL2'",
	"Calculate.code.label": "javaScript Code",
	"Calculate.code.description": "your function migth be called 'calc' and return the value to sum\n return: Decimal ",

	"ColumnToList.node_label": "Column {{coluna}} from {{Tabela}}  to {{returnTo}}",
	"ColumnToList.description": "Converts a column from a Table to a list of string",
	"ColumnToList.return_description": "",
	"ColumnToList.table.label": "Table",
	"ColumnToList.table.description": "",
	"ColumnToList.cols.label": "Column",
	"ColumnToList.cols.description": "Column from table to be converted in a list",

	"FilterRegister.node_label": "Filtering {{Tabela}}",
	"FilterRegister.description": "Filter registers from table using JS Code",
	"FilterRegister.return_description": "",
	"FilterRegister.table.label": "Table:",
	"FilterRegister.table.description": "",
	"FilterRegister.cols.label": "Input Columns:",
	"FilterRegister.cols.description": "Columns used in Js code Ex:'COl1|COL2'",
	"FilterRegister.code.label": "javaScript Code",
	"FilterRegister.code.description": "your function migth be called 'filter' and return True|False",

	"ReorderColumns.node_label": "from {{Tabela}} order {{colunas}}",
	"ReorderColumns.description": "Order columns from a table acording to definned columns\nnot inserted columns on field 'Columns' will be deleted from output",
	"ReorderColumns.return_description": "",
	"ReorderColumns.table.label": "Table:",
	"ReorderColumns.table.description": "",
	"ReorderColumns.cols.label": "Columns:",
	"ReorderColumns.cols.description": "Columns to be reordered Ex:'COl1|COL2'",

	"RowToList.description": "Converts a column from a table to a list of string",
	"RowToList.node_label": "Line {{row}} from {{Tabela}}  to {{lista}}",
	"RowToList.return_description": "",
	"RowToList.type.label": "Type:",
	"RowToList.type.description": "",
	"RowToList.record.label": "Record:",
	"RowToList.record.description": "",
	"RowToList.table.label": "Table:",
	"RowToList.table.description": "",
	"RowToList.row.label": "Row:",
	"RowToList.row.description": "",


	"SetColumnName.description": "Rename a column from datatable",
	"SetColumnName.node_label": "Column {{ColumnName}} from {{Tabela}}  to {{NewColumnName}}",
	"SetColumnName.return_description": "",
	"SetColumnName.table.label": "Table:",
	"SetColumnName.table.description": "",
	"SetColumnName.col.label": "Colums:",
	"SetColumnName.col.description": "",
	"SetColumnName.colname.label": "Column:",
	"SetColumnName.colname.description": "Insert the column name",
	"SetColumnName.colidx.label": "Index:",
	"SetColumnName.colidx.description": "Insert the index from column",
	"SetColumnName.colnew.label": "New name:",
	"SetColumnName.colnew.description": "Insert the new column name",


	"TableColumnForm.description": "Include/Update a column according to a Js code",
	"TableColumnForm.node_label": "",
	"TableColumnForm.return_description": "",
	"TableColumnForm.table.label": "Table:",
	"TableColumnForm.table.description": "",
	"TableColumnForm.cols.label": "Input Columns:",
	"TableColumnForm.cols.description": "Columns to be used on JS code Ex:'COl1|COL2'",
	"TableColumnForm.colnewtype.label": "Position:",
	"TableColumnForm.colnewtype.description": "Position of the new column on table",
	"TableColumnForm.coltype.label": "Column by:",
	"TableColumnForm.coltype.description": "",
	"TableColumnForm.col.label": "Column Name:",
	"TableColumnForm.col.description": "Will be added at the end of the table",
	"TableColumnForm.colidx.label": "Index:",
	"TableColumnForm.colidx.description": "Insert the index of the column",
	"TableColumnForm.colname.label": "Column:",
	"TableColumnForm.colname.description": "Insert the column name",
	"TableColumnForm.code.label": "javaScript Code",
	"TableColumnForm.code.description": "your function migth be called 'filter' and return the new value",

	"TableQuery.description": "Formats values to a insert query\n Ps:\n\t*The numeric emtpty values are converted to 0\n\t*Field 'Columns' blank = All Columns",
	"TableQuery.node_label": "",
	"TableQuery.return_description": "",
	"TableQuery.reg.label": "Registers",
	"TableQuery.reg.description": "Number of register by query",
	"TableQuery.col.label": "Columns:",
	"TableQuery.col.description": "Columns that will be used (ordered as necessary)",
	"TableQuery.mysql.label": "Is a Mysql query",
	"TableQuery.mysql.description": "Formats the text on the appropriate format for Mysql",
	"TableQuery.usd.label": "Columns/USD",
	"TableQuery.usd.description": "Columns having USD format",
	"TableQuery.brlusd.label": "Columns/BRL->USD",
	"TableQuery.brlusd.description": "Convert Brl Values to USD format",

	"TableToXLS.description": "",
	"TableToXLS.node_label": "{{tabela}} to {{outputFile}}",
	"TableToXLS.return_description": "Address of the new file",
	"TableToXLS.output.label": "Output file",
	"TableToXLS.output.description": "example: C:\\folder\\file.xls",

	"TableToXLSX.description": "",
	"TableToXLSX.node_label": "{{tabela}} to {{outputFile}}",
	"TableToXLSX.return_description": "Address of the new file",
	"TableToXLSX.output.label": "Output file",
	"TableToXLSX.output.description": "example: C:\\folder\\file.xlsx",

	"XlsxToTable.description": "",
	"XlsxToTable.node_label": "{{file}} to DataTable",
	"XlsxToTable.return_description": "DataTable from xlsx file",
	"XlsxToTable.file.label": "Output file",
	"XlsxToTable.file.description": "example: C:\\folder\\file.xlsx",
	"XlsxToTable.sheetby.label": "Sheet:",
	"XlsxToTable.sheetby.description": "",
	"XlsxToTable.sheetname.label": "Name:",
	"XlsxToTable.sheetname.description": "Sheet name:",
	"XlsxToTable.sheetidx.label": "Index",
	"XlsxToTable.sheetidx.description": "Sheet Index:",
	"XlsxToTable.cols.label": "",
	"XlsxToTable.cols.description": "Insert desired columns | Example: A:C ou A|B|C ",
	"XlsxToTable.header.label": "Has headers",
	"XlsxToTable.header.description": "",
	"XlsxToTable.startcheck.label": "Start Row",
	"XlsxToTable.startcheck.description": "",
	"XlsxToTable.startrow.label": "Insert the row to start:",
	"XlsxToTable.startrow.description": "Greater than 0"

}